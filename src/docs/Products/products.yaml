paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
          - Regular User
      parameters:
        - name: limit
          in: query
          description: Cantidad de productos por pagina
          schema:
            type: number
            default: 10
        - name: page
          in: query
          description: Numero de pagina solicitada
          schema:
            type: number
            default: 1
        - name: sort
          in: query
          description: Indica que se realice un ordenamiento "asc" (ascendente) o "des" (desendente) de los productos respecto del precio
          schema:
            type: string
        - name: query
          in: query
          description: Parametro de filtrado en lo productos. Permite seleccionar los productos según campo especifico. Ej:"category":"cosmetica"
          schema:
            type: string
      responses:
        "200":
          description: Datos obtenidos satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: Indica el estado de la petición.
                  payload: 
                    type: array
                    items: 
                      $ref: "#/components/schemas/Product"
                  totalPages: 
                    type: number
                    description: Indica el numero de paginas totales generados por el proceso de paginación
                  page:
                    type: number
                    description: Pagina actual entregada
                  prevPage: 
                    type: number
                    description: Pagina previa
                  nextPage: 
                    type: number
                    description: Pagina siguiente
                  hasPrevPage: 
                    type: boolean
                    description: Indica si existe pagina previa
                  hasNextPage: 
                    type: boolean
                    description: Indica si existe pagina siguiente
                  prevLink: 
                    type: string
                    description: Link a la pagina anterior. NULL en caso de no aplicar
                  nextLink: 
                    type: string
                    description: Link a la pagina siguiente. NULL en caso de no aplicar
        "404":
          description: Error en la petición
          content: 
            aplication/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: Estado "Error". Indica un error en la solicitud
                  ERROR:
                    type: string
                    description: Mensaje detallado del error

    post:
      summary: Agrega nuevos productos al sistema. Se necesita ser ADMIN/PREMIUM
      tags:
        - Products
          - Admin / Premium
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProduct"
      responses:
        "200":
          description: Producto cargado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado 'Success'. Indica la carga exitos del producto al sistema
                  payload: 
                    type: object
                    $ref: '#/components/schemas/Product'
        "400":
          description: Se devuelve un objeto con el mensaje de error

  /api/products/{productId}:
    get:
      summary: Obtiene un producto por id
      tags:
        - Products
          - Regular User
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto que se solicita
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Error en la petición
          content: 
            aplication/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: Estado "Error". Indica un error en la solicitud
                  ERROR:
                    type: string
                    description: Mensaje detallado del error
    put:
      summary: Actualiza un producto por id
      tags:
        - Products
          - Admin / Premium
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto que se actualiza
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Producto actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Mensaje de confirmacion de actualizacion"
        "400":
          description: Error al actualizar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  ERROR:
                    type: string
                    description: "Mensaje de error"

    delete:
      summary: Elimina un producto por id
      tags:
        - Products
          - Admin / Premium
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      responses:
        "200":
          description: Producto eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Mensaje de confirmacion de eliminacion"
        "404":
          description: Error al eliminar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  ERROR:
                    type: string
                    description: "Mensaje de error"
        

components:
  schemas:
    Product:
      type: object
      required: [_id, title, description, code, price, stock, category]
      properties:
        _id:
          type: string
          description: ID generado en MongoDB
        title:
          type: string
          description: Titulo/Nombre del producto
        description:
          type: string
          description: Descripcion del producto
        code:
          type: string
          description: Codigo alfanumerico para identificar el producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad de productos disponibles para la venta
        category:
          type: string
          description: Categoria a la que pertenece el producto
        thumbnail:
          type: array
          items: 
            type: string
            description: Ruta a una imagen del producto 
      example:
        _id: "664e8085254b30f2090406e2"
        title: "COCO SHAMPOO"
        description: "Shampoo de 210 ml"
        code: "as4d867g8fda"
        price: 999
        stock: 10
        category: "cosmetica"
        thumbnail: [./public/img/img1.png, ./public/img/img1.png]


  requestBodies:
    addProduct:
      type: object
      required: [title, description, code, price, stock, category]
      properties:
        title:
          type: string
          description: Titulo/Nombre del producto
        description:
          type: string
          description: Descripcion del producto
        code:
          type: string
          description: Codigo alfanumerico para identificar el producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad de productos disponibles para la venta
        category:
          type: string
          description: Categoria a la que pertenece el producto
        thumbnail:
          type: array
          items: 
            type: string
            description: Ruta a una imagen del producto 
      example:
        title: "COCO SHAMPOO"
        description: "Shampoo de 210 ml"
        code: "as4d867g8fda"
        price: 999
        stock: 10
        category: "cosmetica"
        thumbnail: [./public/img/img1.png, ./public/img/img1.png]

    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: Titulo/Nombre del producto
        description:
          type: string
          description: Descripcion del producto
        code:
          type: string
          description: Codigo alfanumerico para identificar el producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad de productos disponibles para la venta
        category:
          type: string
          description: Categoria a la que pertenece el producto
        thumbnail:
          type: array
          items: 
            type: string
            description: Ruta a una imagen del producto 